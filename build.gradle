import groovy.json.JsonSlurper

plugins {
    id 'java'
}

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
    ivy {
        url 'https://github.com/'
        patternLayout {
            artifact '/[organization]/[module]/releases/download/[revision]/[ext]'
        }
        metadataSources {
            artifact()
        }
    }
}

// project level config
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// where to find sources
sourceSets.main.java.srcDirs = ['src/']

// build everything and make a jar
build {


    doLast {
        copy {
            from jar
            from '.'
            
            into 'build'
            include 'data/**'
            include 'sounds/**'
            include 'graphics/**'
            include 'mod_info.json'
        }
    }
}

jar {
    from {
        configurations
                .runtimeClasspath
                .collect {
                    if(it.name.equalsIgnoreCase("flanagan.jar")) {
                        zipTree(it)
                    }
                }
    }
}


// compile time dependencies
dependencies {
    implementation "jaghaimo:starsector-api:0.96a-RC10@starfarer.api.jar"
    implementation files('libs/MagicLib.jar')
    implementation files('libs/LazyLib.jar')
    implementation files('libs/Graphics.jar')
    implementation files('libs/CMUtils.jar')

    implementation 'ch.ethz.globis.phtree:phtree:2.8.0'


    // game dependencies
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.10'
    implementation group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: '2.9.3'
    implementation group: 'org.lwjgl.lwjgl', name: 'lwjgl_util', version: '2.9.3'
    implementation group: 'log4j', name: 'log4j', version: '1.2.9'
    implementation group: 'org.json', name: 'json', version: '20090211'
    implementation group: 'net.java.jinput', name: 'jinput', version: '2.0.7'
    implementation group: 'org.codehaus.janino', name: 'janino', version: '3.0.7'

}

// custom tasks

tasks.register('release', Zip) {
    dependsOn build
    archiveFileName = "${project.name}-${readModInfoJson().version}.zip"
    destinationDirectory = file(rootDir)
    
    from(layout.buildDirectory) {
        include 'data/**'
        include 'sounds/**'
        include 'graphics/**'
        include 'mod_info.json'
        include 'build/**'
        into "${project.name}"
    }

    from(jar.outputs.files){
        into "${project.name}/jars"
    } 

}
// methods
def readModInfoJson() {
    def jsonFile = file('./mod_info.json')
    def slurper = new JsonSlurper()
    return slurper.parse(jsonFile)
}

